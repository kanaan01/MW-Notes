import { useState, useEffect } from 'react';
import axios from 'axios';
import useMirayaToast from '../../helpers/useMirayaToast';
import MirayaToast from '../../helpers/miraya-toast';
import { Spinner } from 'react-activity';
import { useSelector } from 'react-redux';
import { strings } from '../../config/strings';

const DiscountBanner = () => {
  if (process.env.NEXT_PUBLIC_ENVIRONMENT !== 'dev') {
    return null;
  }

  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [isOpen, setIsOpen] = useState(false);
  const [isClosing, setIsClosing] = useState(false);
  const [isAppearing, setIsAppearing] = useState(true);
  const [isLoading, setIsLoading] = useState(false);
  const { showToast } = useMirayaToast();
  const language = useSelector((state) => state.language.language);

  useEffect(() => {
    const bannerShown = sessionStorage.getItem('discountBannerShown');
    if (!bannerShown) {
      const timer = setTimeout(() => {
        setIsOpen(true);
        setTimeout(() => setIsAppearing(false), 50);
      }, 2000);
      return () => clearTimeout(timer);
    }
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    try {
      const response = await axios.post('/api/saveDiscountSignup', { name, email });
      if (response.data.alreadySignedUp) {
        showToast(strings('email_already_signed_up', language), 'info');
      } else {
        showToast(strings('discount_eligibility_success', language), 'success');
        handleClose();
      }
    } catch (error) {
      if (error.response && error.response.status === 409) {
        showToast(strings('email_already_signed_up', language), 'info');
      } else {
        showToast(strings('submission_failed', language), 'error');
      }
    } finally {
      setIsLoading(false);
    }
  };

  const handleClose = () => {
    setIsClosing(true);
    setTimeout(() => {
      setIsOpen(false);
      setIsClosing(false);
      sessionStorage.setItem('discountBannerShown', 'true');
    }, 300);
  };

  if (!isOpen) return null;

  return (
    <>
      <div className={`fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300 ${isClosing ? 'opacity-0' : 'opacity-100'}`}>
        <div className={`bg-[#EFCEC7] text-black p-8 rounded-sm max-w-md w-full relative transition-all duration-300
          ${isClosing ? 'scale-95 opacity-0' : 'scale-100 opacity-100'}
          ${isAppearing ? 'scale-95 opacity-0' : 'scale-100 opacity-100'}`}>
          <button
            onClick={handleClose}
            className="absolute top-2 right-2 text-black text-xl"
          >
            Ã—
          </button>
          <h2 className="text-2xl font-bold mb-4 text-center font-BrandonBold">
            {strings('get_discount_title', language)}
          </h2>
          <p className="text-center mb-6 font-BrandonRegular">
            {strings('discount_description', language)}
          </p>
          <form onSubmit={handleSubmit} className="flex flex-col gap-4">
            <input
              type="text"
              value={name}
              onChange={(e) => setName(e.target.value)}
              placeholder={strings('name', language)}
              required
              className="p-3 border rounded text-black font-BrandonRegular"
            />
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder={strings('email', language)}
              required
              className="p-3 border rounded text-black font-BrandonRegular"
            />
            <button
              type="submit"
              className="flex flex-1 cursor-pointer items-center justify-center gap-1.5 rounded-lg bg-dark px-1 py-2.5 mobile-only:h-9 sm:gap-2.5 sm:py-[15px]"
              disabled={isLoading}
            >
              {isLoading ? (
                <Spinner color="#fff" size={12} />
              ) : (
                <span className='font-BrandonBold text-xs uppercase text-white sm:text-base'>
                  {strings('subscribe_button', language)}
                </span>
              )}
            </button>
          </form>
          <p className="text-xs text-center mt-4 font-BrandonRegular">
            {strings('privacy_policy_notice', language)}
          </p>
        </div>
      </div>
      <MirayaToast />
    </>
  );
};

export default DiscountBanner;
